{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","this","orderedGoods","goods","visibleGoods","sort","good1","good2","LENGTH","length","ALPABET","localeCompare","reverse","console","log","getReorderedGoods","className","type","classNames","onClick","setState","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA8CE,IAAME,EAAb,4MACEC,MAAe,CACbC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,4CAME,WAAU,IAAD,OACP,EAAiCC,KAAKJ,MAA9BG,EAAR,EAAQA,WAAYF,EAApB,EAAoBA,SACdI,EA3CH,SACLC,EADK,GAGJ,IADCL,EACF,EADEA,SAAUE,EACZ,EADYA,WAENI,EAAY,YAAOD,GAuBzB,OArBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQT,GACN,KAAKJ,EAASc,OACZ,OAAOF,EAAMG,OAASF,EAAME,OAE9B,KAAKf,EAASgB,QACZ,OAAOJ,EAAMK,cAAcJ,GAE7B,KAAKb,EAASK,KACd,QACE,OAAO,MAITC,GACFI,EAAaQ,UAIfC,QAAQC,IAAIhB,EAAUE,GAEfI,EAgBgBW,CAAkBpB,EAAiBM,KAAKJ,OAE7D,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYpB,IAAaJ,EAASgB,UAEtCS,QAAS,WACP,EAAKC,UAAS,iBAAO,CACnBtB,SAAUJ,EAASgB,aARzB,iCAeA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYpB,IAAaJ,EAASc,SAEtCW,QAAS,WACP,EAAKC,UAAS,iBAAO,CACnBtB,SAAUJ,EAASc,YARzB,4BAeA,wBACES,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAalB,IAEjBmB,QAAS,WACP,EAAKC,UAAS,SAAAvB,GAAK,MAAK,CACtBG,YAAaH,EAAMG,gBARzB,sBAeEF,IAAaJ,EAASK,MAAQC,IAE1B,wBACEiB,KAAK,SACLD,UAAU,4BACVG,QAAS,WACP,EAAKC,UAAS,iBAAO,CACnBtB,SAAUJ,EAASK,KACnBC,YAAY,OANlB,sBAeR,6BAEIE,EAAamB,KAAI,SAACC,GAAD,OACf,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,eA9EvB,GAAyBC,aC7DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.08ad265d.chunk.js","sourcesContent":["import { Component } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      case SortType.ALPABET:\n        return good1.localeCompare(good2);\n\n      case SortType.NONE:\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const orderedGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPABET },\n            )}\n            onClick={() => {\n              this.setState(() => ({\n                sortType: SortType.ALPABET,\n              }));\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={() => {\n              this.setState(() => ({\n                sortType: SortType.LENGTH,\n              }));\n            }}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={() => {\n              this.setState(state => ({\n                isReversed: !state.isReversed,\n              }));\n            }}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed)\n              && (\n                <button\n                  type=\"button\"\n                  className=\"button is-danger is-light\"\n                  onClick={() => {\n                    this.setState(() => ({\n                      sortType: SortType.NONE,\n                      isReversed: false,\n                    }));\n                  }}\n                >\n                  Reset\n                </button>\n              )}\n        </div>\n\n        <ul>\n          {\n            orderedGoods.map((good) => (\n              <li key={good} data-cy=\"Good\">{good}</li>\n            ))\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}