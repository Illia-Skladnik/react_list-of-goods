{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPABET","sort","good1","good2","localeCompare","LENGTH","length","NONE","reverse","console","log","App","state","this","className","type","classNames","onClick","setState","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAERC,EAAY,YAAOH,GAEvB,OAAQC,GACN,KAAKJ,EAASO,QACZD,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAmBD,EAAME,cAAcD,MACzD,MAEF,KAAKV,EAASY,OACZN,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAmBD,EAAMI,OAASH,EAAMG,UAC1D,MAEF,KAAKb,EAASc,KACZR,EAAY,YAAOH,GAcvB,OAPIE,GACFC,EAAaS,UAIfC,QAAQC,IAAIb,EAAUC,GAEfC,G,SAzCJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAiDE,IAAMkB,EAAb,4MACEC,MAAe,CACbf,SAAUJ,EAASc,KACnBT,YAAY,GAHhB,4CAME,WAAU,IAAD,OACP,EAAiCe,KAAKD,MAA9Bd,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,SAEpB,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SAELD,UAAWE,IAAW,iBAAkB,CAAE,WAAYnB,IAAaJ,EAASO,UAC5EiB,QAAS,WACP,EAAKC,UAAS,iBAAO,CACnBrB,SAAUJ,EAASO,aANzB,iCAaA,wBACEe,KAAK,SAELD,UAAWE,IAAW,oBAAqB,CAAE,WAAYnB,IAAaJ,EAASY,SAC/EY,QAAS,WACP,EAAKC,UAAS,iBAAO,CACnBrB,SAAUJ,EAASY,YANzB,4BAaA,wBACEU,KAAK,SAELD,UAAWE,IAAW,oBAAqB,CAAE,YAAalB,IAC1DmB,QAAS,WACP,EAAKC,UAAS,SAAAN,GAAK,MAAK,CACtBd,YAAac,EAAMd,gBANzB,sBAcGD,IAAaJ,EAASc,MAAQT,IAE3B,wBACEiB,KAAK,SACLD,UAAU,4BACVG,QAAS,WACP,EAAKC,UAAS,iBAAO,CACnBrB,SAAUJ,EAASc,KACnBT,YAAY,OANlB,sBAgBR,6BAEIH,EAAkBD,EAAiBmB,KAAKD,OAAOO,KAAI,SAACC,GAAD,OACjD,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,eAzEvB,GAAyBC,aChEzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3389ddec.chunk.js","sourcesContent":["import { Component } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  let visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods.sort((good1, good2) => (good1.localeCompare(good2)));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((good1, good2) => (good1.length - good2.length));\n      break;\n\n    case SortType.NONE:\n      visibleGoods = [...goods];\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            // eslint-disable-next-line max-len\n            className={classNames('button is-info', { 'is-light': sortType !== SortType.ALPABET })}\n            onClick={() => {\n              this.setState(() => ({\n                sortType: SortType.ALPABET,\n              }));\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            // eslint-disable-next-line max-len\n            className={classNames('button is-success', { 'is-light': sortType !== SortType.LENGTH })}\n            onClick={() => {\n              this.setState(() => ({\n                sortType: SortType.LENGTH,\n              }));\n            }}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            // eslint-disable-next-line max-len\n            className={classNames('button is-warning', { 'is-light': !isReversed })}\n            onClick={() => {\n              this.setState(state => ({\n                isReversed: !state.isReversed,\n              }));\n            }}\n          >\n            Reverse\n          </button>\n\n          {\n            (sortType !== SortType.NONE || isReversed)\n              && (\n                <button\n                  type=\"button\"\n                  className=\"button is-danger is-light\"\n                  onClick={() => {\n                    this.setState(() => ({\n                      sortType: SortType.NONE,\n                      isReversed: false,\n                    }));\n                  }}\n                >\n                  Reset\n                </button>\n              )\n          }\n        </div>\n\n        <ul>\n          {\n            getReorderedGoods(goodsFromServer, this.state).map((good) => (\n              <li key={good} data-cy=\"Good\">{good}</li>\n            ))\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}